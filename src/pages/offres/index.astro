---
import Header from "../../components/Header.astro";
import Base from '../../layouts/Base.astro';
import '../../assets/css/base.css'
import Card from "../../components/Card.astro";
import { getOffres, filterByPrix } from "../../backend.mjs";


/*
const offres = [
    {
        "adresse": "2821 Lake Sevilla, Palm Harbor, TX",
        "favori": true,
        "id": "64l3n8nar836i5j",
        "nbChambres": 4,
        "nbSdb": 2,
        "nomMaison": "Beverly Springfield",
        "prix": 2700,
        "surface": 45,
        "imgUrl": "image1"
    },
    {
        "adresse": "2699 Green Valley, Highland Lake",
        "favori": true,
        "id": "lo831zeg10hpm9y",
        "nbChambres": 4,
        "nbSdb": 2,
        "nomMaison": "Palm Harbor",
        "prix": 2095,
        "surface": 42,
        "imgUrl": "image2"
    },
    {
        "adresse": "909 Woodland St, Michigan, IN",
        "favori": false,
        "id": "s1zuhj19x8eb242",
        "nbChambres": 4,
        "nbSdb": 3,
        "nomMaison": "Faulkner Ave",
        "prix": 4550,
        "surface": 80,
        "imgUrl": "image3"
    }
]
*/
let message = '';
let offres = [];
if (Astro.request.method === "POST") {
    const data = await Astro.request.formData();
    const minPrix = parseInt(data.get("minPrix"));
    const maxPrix = parseInt(data.get("maxPrix"));

    if (minPrix > 0 && maxPrix > 0 && maxPrix > minPrix) {
        offres = await filterByPrix(minPrix, maxPrix);
		if(offres.length === 0) {
			message = `Pas d'offres entre ${minPrix}€ et ${maxPrix}€`;
		} else {
        	message = `Liste des offres entre ${minPrix}€ et ${maxPrix}€`
		}
    } else {
        message = "Veuillez entrer des valeurs valides pour le prix.";
        offres = await getOffres();
    }
} else {
    offres = await getOffres();
}
---
<Base>
    <h1 class="text-4xl font-bold text-blue-700 mb-4">Offres</h1>
    <form action="/offres" method="POST">
        <input type="number" name="minPrix" placeholder="Prix minimum" />
        <input type="number" name="maxPrix" placeholder="Prix maximum" />
        <input type="submit" value="Filtrer par prix" />
    </form>
    <a href=`/offres/surface/80`>
        <button class="background-color: #007bff; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; font-size: 16px;">FILTRE</button>
      </a>
    <div>
        <div x-data="{ favori: false, vue: 'grid' }" class="w-full p-4">
        <div class="flex gap-2 mb-4">
            <button x-on:click="vue = 'grid'" class="px-4 py-2 rounded-lg bg-blue-600 text-white">
                Affichage en grille
            </button>
            <button x-on:click="vue = 'list'" class="px-4 py-2 rounded-lg bg-gray-600 text-white">
                Affichage en liste
            </button>
        </div>
        <div x-bind:class="vue === 'grid' ? 'grid grid-cols-2 gap-4' : 'flex flex-col gap-2'"></div>
    </div>
    <div x-data="{ showFavorites: false }">
        <button @click="showFavorites = !showFavorites">
            <span x-show="!showFavorites" class="px-4 py-2 rounded-lg bg-blue-900 text-white">Afficher les favoris</span>
            <span x-show="showFavorites" class="px-4 py-2 rounded-lg bg-gray-400 text-white">Afficher tout</span>
        </button>
    
        <div x-show="!showFavorites">
            {offres.map((offre) => <Card {...offre} />)}
        </div>
        <div x-show="showFavorites">
            {offres.map((offre) => offre.favori && <Card {...offre} />)}
        </div>
    </div>

</Base>

